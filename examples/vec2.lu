vec2 = setmeta({
	mt = {
		__name = "vec2",
		__add = function(left, right) {
			return vec2(left.x + right.x, left.y + right.y)
		},
		__sub = function(left, right) {
			return vec2(left.x - right.x, left.y - right.y)
		},
		__mul = function(left, right) {
			return vec2(left.x * right.x, left.y * right.y)
		},
		__div = function(left, right) {
			return vec2(left.x / right.x, left.y / right.y)
		},
		__eq = function(left, right) {
			return left.x == right.x & left.y == right.y
		},
		__ne = function(left, right) {
			return left.x != right.x & left.y != right.y
		},
	},
	tostr = function(self) {
		return tostr("(", self.x, ", ", self.y, ")")
	},
	len = function(self) {
		return math.sqrt(self.x ^ 2 + self.y ^ 2)
	},
	normalized = function(self) {
		return vec2(self.x / self:len(), self.y / self:len())
	},
	normalize = function(self) {
		self = self:normalized()
	},
}, {
	__call = function(self, x, y) {
		let o = obj.copy(self)
		o.x = x
		o.y = y
		return setmeta(o, self.mt)
	}
})

let v1 = vec2(1., 2.)
let v2 = vec2(3., 5.)
let v1n = v1:normalized()
let v2n = v2:normalized()
print(v1:tostr(), v1:len())
print(v2:tostr(), v2:len())
print(v1n:tostr(), v1n:len())
print(v2n:tostr(), v2n:len())